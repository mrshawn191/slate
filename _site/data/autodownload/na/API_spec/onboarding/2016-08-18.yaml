swagger: '2.0'
info:
  version: "2016-08-18"
  title: Onboarding API
  description: Onboarding API Specifications
host: api.na.bambora.com
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
    description: 'Pass the Authorization header in your request as "Authorization: Token INSERT_KEY_HERE. Contact Bambora to get an API Key generated for you if you don''t have one.'
paths:
# SEPA-EUR WORKFLOW
  '/v1/boarding/workflows/sepa-eur/applications':
    post:
      tags:
        - Funds Transfer (SEPA-EUR)
      operationId: createSepaEurApplication
      description: |
        Creates a new SEPA-EUR application. The state of the application will be returned in a successful request. The response will include an application id that should be used for all future requests to that application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: application
          in: body
          description: 'SEPA-EUR application details'
          required: true
          schema:
            $ref: '#/definitions/SepaEurApplicationRequest'
      responses:
        201:
          description: 'Application created'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Funds Transfer (SEPA-EUR)
      operationId: getSepaEurApplications
      description: |
        Retrieves all applications referenced by the given criteria in the url. A search criteria can be a combination of the following:

           - state={state}
            - *Accepted values are "in\_progress", "in\_review", "on\_hold", "approved" and "rejected"*
           - created_before={date}
           - created_after={date}
           - updated_before={date}
           - updated_after={date}

        Documents file data will be excluded to limit the amount of data on the wire.
      produces:
        - application/json
      security:
        - api_key: []
      responses:
        200:
          description: 'Application(s) retrieved'
          schema:
           type: array
           items:
            $ref: '#/definitions/SepaEurApplicationResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/sepa-eur/applications/{applicationId}':
    put:
      tags:
        - Funds Transfer (SEPA-EUR)
      operationId: updateSepaEurApplication
      description: |
        Updates a SEPA-EUR application referenced by the given applicationId.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to update'
          type: integer
        - name: application
          in: body
          description: 'SEPA-EUR Application details'
          required: true
          schema:
            $ref: '#/definitions/SepaEurApplicationRequest'
      responses:
        200:
          description: 'Application updated'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Funds Transfer (SEPA-EUR)
      operationId: getSepaEurApplication
      description: |
        Retrieves a SEPA-EUR application referenced by the given applicationId.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to retrieve'
          type: string
      responses:
        200:
          description: 'Application retrieved'
          schema:
            $ref: '#/definitions/SepaEurApplicationResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/sepa-eur/applications/{applicationId}/documents':
    post:
      tags:
        - Funds Transfer (SEPA-EUR)
      operationId: createSepaEurApplicationDocuments
      description: |
        Creates a SEPA-EUR application document for the referenced applicationId. Returns the status of the application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to create a document in'
          type: integer
        - name: document
          in: body
          description: 'Document details'
          required: true
          schema:
            $ref: '#/definitions/SepaEurFile'
      responses:
        200:
          description: 'Document created'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request data or invalid api version'
          schema:
            $ref: '#/definitions/CombinedErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/sepa-eur/applications/{applicationId}/documents/{documentName}.{documentType}':
    get:
      tags:
        - Funds Transfer (SEPA-EUR)
      operationId: getSepaEurApplicationDocuments
      description: |
       Retrieve a SEPA-EUR application document for the referenced applicationId, documentName and documentType.  The content type of the response returned will depend on the documentType passed into the path.
      produces:
        - image/png
        - image/jpeg
        - application/pdf
        - application/msword
        - application/vnd.openxmlformats-officedocument.wordprocessingml.document
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to get the document from'
          type: integer
        - name: documentName
          in: path
          required: true
          description: 'The name of the document to get'
          type: string
          enum: ["copy_id", "void_cheque", "bank_statement", "certificate", "registration", "board_members", "mandate"]
        - name: documentType
          in: path
          required: true
          description: 'The type of the document to get'
          type: string
          enum: ["jpg", "jpeg", "doc", "docx", "pdf", "png"]
      responses:
        200:
          description: 'Document retrieved successfully'
          schema:
            type: file
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Document not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 'Unexpected error or application not found'
  '/v1/boarding/workflows/sepa-eur/applications/{applicationId}/documents/{documentName}':
    delete:
      tags:
        - Funds Transfer (SEPA-EUR)
      operationId: deleteSepaEurApplicationDocuments
      description: |
        Deletes a SEPA-EUR application document for the referenced applicationId and documentName. Returns the status of the application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to delete the document from'
          type: integer
        - name: documentName
          in: path
          required: true
          description: 'The name of the document to delete'
          type: string
          enum: ["copy_id", "void_cheque", "bank_statement", "certificate", "registration", "board_members", "mandate"]
      responses:
        204:
          description: 'Document deleted successfully'
        400:
          description: 'Invalid document id or invalid api version'
          schema:
            $ref: '#/definitions/CombinedErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Document not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 'Unexpected error or application not found'

#BACS GBP WORKFLOW
  '/v1/boarding/workflows/bacs-gbp/applications':
    post:
      tags:
        - Funds Transfer (BACS-GBP)
      operationId: createBacsGbpApplication
      description: |
        Creates a new BACS-GBP application. The state of the application will be returned in a successful request. The response will include an application id that should be used for all future requests to that application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: application
          in: body
          description: 'BACS-GBP Application details'
          required: true
          schema:
            $ref: '#/definitions/BacsGbpApplicationRequest'
      responses:
        201:
          description: 'Application created'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Funds Transfer (BACS-GBP)
      operationId: getBacsGbpApplications
      description: |
        Retrieves all applications referenced by the given criteria in the url. A search criteria can be a combination of the following:

           - state={state}
            - *Accepted values are "in\_progress", "in\_review", "on\_hold", "approved" and "rejected"*
           - created_before={date}
           - created_after={date}
           - updated_before={date}
           - updated_after={date}

        Documents file data will be excluded to limit the amount of data on the wire.
      produces:
        - application/json
      security:
        - api_key: []
      responses:
        200:
          description: 'Application(s) retrieved'
          schema:
           type: array
           items:
            $ref: '#/definitions/BacsGbpApplicationResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/bacs-gbp/applications/{applicationId}':
    put:
      tags:
        - Funds Transfer (BACS-GBP)
      operationId: updateBacsGbpApplication
      description: |
        Updates a BACS-GBP application referenced by the given applicationId.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to update'
          type: integer
        - name: application
          in: body
          description: 'BACS-GBP Application details'
          required: true
          schema:
            $ref: '#/definitions/BacsGbpApplicationRequest'
      responses:
        200:
          description: 'Application updated'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Funds Transfer (BACS-GBP)
      operationId: getBacsGbpApplication
      description: |
        Retrieves a BACS-GBP application referenced by the given applicationId.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to retrieve'
          type: string
      responses:
        200:
          description: 'Application retrieved'
          schema:
            $ref: '#/definitions/BacsGbpApplicationResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/bacs-gbp/applications/{applicationId}/documents':
    post:
      tags:
        - Funds Transfer (BACS-GBP)
      operationId: createBacsGbpApplicationDocuments
      description: |
        Creates a BACS-GBP application document for the referenced applicationId. Returns the status of the application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to create a document in'
          type: integer
        - name: document
          in: body
          description: 'Document details'
          required: true
          schema:
            $ref: '#/definitions/BacsGbpFile'
      responses:
        200:
          description: 'Document created'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request data or invalid api version'
          schema:
            $ref: '#/definitions/CombinedErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/bacs-gbp/applications/{applicationId}/documents/{documentName}.{documentType}':
    get:
      tags:
        - Funds Transfer (BACS-GBP)
      operationId: getBacsGbpApplicationDocuments
      description: |
        Get a BACS-GBP application document for the referenced applicationId, documentName and documentType.  The content type of the response returned will depend on the documentType passed into the path.
      produces:
        - image/png
        - image/jpeg
        - application/pdf
        - application/msword
        - application/vnd.openxmlformats-officedocument.wordprocessingml.document
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to get the document from'
          type: integer
        - name: documentName
          in: path
          required: true
          description: 'The name of the document to get'
          type: string
          enum: ["copy_id", "void_cheque", "bank_statement", "certificate", "registration", "board_members", "direct_debit"]
        - name: documentType
          in: path
          required: true
          description: 'The type of the document to get'
          type: string
          enum: ["jpg", "jpeg", "doc", "docx", "pdf", "png"]
      responses:
        200:
          description: 'Document retrieved successfully'
          schema:
            type: file
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Document not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 'Unexpected error or application not found'
  '/v1/boarding/workflows/bacs-gbp/applications/{applicationId}/documents/{documentName}':
    delete:
      tags:
        - Funds Transfer (BACS-GBP)
      operationId: deleteBacsGbpApplicationDocuments
      description: |
        Deletes a BACS-GBP application document for the referenced applicationId and documentName. Returns the status of the application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to delete the document from'
          type: integer
        - name: documentName
          in: path
          required: true
          description: 'The name of the document to delete'
          type: string
          enum: ["copy_id", "void_cheque", "bank_statement", "certificate", "registration", "board_members", "direct_debit"]
      responses:
        204:
          description: 'Document deleted successfully'
        400:
          description: 'Invalid document id or invalid api version'
          schema:
            $ref: '#/definitions/CombinedErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Document not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 'Unexpected error or application not found'

# ACH USD WORKFLOW
  '/v1/boarding/workflows/ach-usd/applications':
    post:
      tags:
        - Funds Transfer (ACH-USD)
      operationId: createAchUsdApplication
      description: |
        Creates a new ACH-USD application. The state of the application will be returned in a successful request. The response will include an application id that should be used for all future requests to that application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: application
          in: body
          description: 'ACH-USD Application details'
          required: true
          schema:
            $ref: '#/definitions/AchUsdApplicationRequest'
      responses:
        201:
          description: 'Application created'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Funds Transfer (ACH-USD)
      operationId: getAchUsdApplications
      description: |
        Retrieves all applications referenced by the given criteria in the url. A search criteria can be a combination of the following:

           - state={state}
            - *Accepted values are "in\_progress", "in\_review", "on\_hold", "approved" and "rejected"*
           - created_before={date}
           - created_after={date}
           - updated_before={date}
           - updated_after={date}

        Documents file data will be excluded to limit the amount of data on the wire.
      produces:
        - application/json
      security:
        - api_key: []
      responses:
        200:
          description: 'Application(s) retrieved'
          schema:
           type: array
           items:
            $ref: '#/definitions/AchUsdApplicationResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/ach-usd/applications/{applicationId}':
    put:
      tags:
        - Funds Transfer (ACH-USD)
      operationId: updateAchUsdApplication
      description: |
        Updates an ACH-USD application referenced by the given applicationId.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to update'
          type: integer
        - name: application
          in: body
          description: 'ACD-USD Application details'
          required: true
          schema:
            $ref: '#/definitions/AchUsdApplicationRequest'
      responses:
        200:
          description: 'Application updated'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Funds Transfer (ACH-USD)
      operationId: getAchUsdApplication
      description: |
        Retrieves an ACH-USD application referenced by the given applicationId.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to retrieve'
          type: string
      responses:
        200:
          description: 'Application retrieved'
          schema:
            $ref: '#/definitions/AchUsdApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/ach-usd/applications/{applicationId}/documents':
    post:
      tags:
        - Funds Transfer (ACH-USD)
      operationId: createAchUsdApplicationDocuments
      description: |
        Creates an ACH-USD application document for the referenced applicationId. Returns the status of the application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to create a document in'
          type: integer
        - name: document
          in: body
          description: 'Document details'
          required: true
          schema:
            $ref: '#/definitions/AchUsdFile'
      responses:
        200:
          description: 'Document created'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request data or invalid api version'
          schema:
            $ref: '#/definitions/CombinedErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/ach-usd/applications/{applicationId}/documents/{documentName}.{documentType}':
    get:
      tags:
        - Funds Transfer (ACH-USD)
      operationId: getAchUsdApplicationDocuments
      description: |
        Get an ACH-USD application document for the referenced applicationId, documentName and documentType. The content type of the response returned will depend on the documentType passed into the path.
      produces:
        - image/png
        - image/jpeg
        - application/pdf
        - application/msword
        - application/vnd.openxmlformats-officedocument.wordprocessingml.document
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to get the document from'
          type: integer
        - name: documentName
          in: path
          required: true
          description: 'The name of the document to get'
          type: string
          enum: ["copy_id", "void_cheque", "bank_statement", "certificate", "registration", "board_members"]
        - name: documentType
          in: path
          required: true
          description: 'The type of the document to get'
          type: string
          enum: ["jpg", "jpeg", "doc", "docx", "pdf", "png"]
      responses:
        200:
          description: 'Document retrieved successfully'
          schema:
            type: file
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Document not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 'Unexpected error or application not found'
  '/v1/boarding/workflows/ach-usd/applications/{applicationId}/documents/{documentName}':
    delete:
      tags:
        - Funds Transfer (ACH-USD)
      operationId: deleteAchUsdApplicationDocuments
      description: |
        Deletes an ACH-USD application document for the referenced applicationId and documentName. Returns the status of the application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to delete the document from'
          type: integer
        - name: documentName
          in: path
          required: true
          description: 'The name of the document to delete'
          type: string
          enum: ["copy_id", "void_cheque", "bank_statement", "certificate", "registration", "board_members"]
      responses:
        204:
          description: 'Document deleted successfully'
        400:
          description: 'Invalid document id or invalid api version'
          schema:
            $ref: '#/definitions/CombinedErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Document not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 'Unexpected error or application not found'

# EFT CAD WORKFLOW
  '/v1/boarding/workflows/eft-cad/applications':
    post:
      tags:
        - Funds Transfer (EFT-CAD)
      operationId: createEftCadApplication
      description: |
        Creates a new EFT-CAD application. The state of the application will be returned in a successful request. The response will include an application id that should be used for all future requests to that application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: application
          in: body
          description: 'EFT-CAD Application details'
          required: true
          schema:
            $ref: '#/definitions/EftCadApplicationRequest'
      responses:
        201:
          description: 'Application created'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Funds Transfer (EFT-CAD)
      operationId: getEftCadApplications
      description: |
        Retrieves all applications referenced by the given criteria in the url. A search criteria can be a combination of the following:

           - state={state}
            - *Accepted values are "in\_progress", "in\_review", "on\_hold", "approved" and "rejected"*
           - created_before={date}
           - created_after={date}
           - updated_before={date}
           - updated_after={date}

        Documents file data will be excluded to limit the amount of data on the wire.
      produces:
        - application/json
      security:
        - api_key: []
      responses:
        200:
          description: 'Application(s) retrieved'
          schema:
           type: array
           items:
            $ref: '#/definitions/EftCadApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Applications not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/eft-cad/applications/{applicationId}':
    put:
      tags:
        - Funds Transfer (EFT-CAD)
      operationId: updateEftCadApplication
      description: |
        Updates a EFT-CAD application referenced by the given applicationId.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to update'
          type: integer
        - name: application
          in: body
          description: 'EFT-CAD application details'
          required: true
          schema:
            $ref: '#/definitions/EftCadApplicationRequest'
      responses:
        200:
          description: 'Application updated'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Funds Transfer (EFT-CAD)
      operationId: getEftCadApplication
      description: |
        Retrieves an EFT-CAD application referenced by the given applicationId.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to retrieve'
          type: string
      responses:
        200:
          description: 'Application retrieved'
          schema:
            $ref: '#/definitions/EftCadApplicationResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/eft-cad/applications/{applicationId}/documents':
    post:
      tags:
        - Funds Transfer (EFT-CAD)
      operationId: createEftCadApplicationDocuments
      description: |
        Creates an EFT-CAD application document for the referenced applicationId. Returns the status of the application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to create a document in'
          type: integer
        - name: document
          in: body
          description: 'Document details'
          required: true
          schema:
            $ref: '#/definitions/EftCadFile'
      responses:
        200:
          description: 'Document created'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request data or invalid api version'
          schema:
            $ref: '#/definitions/CombinedErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/eft-cad/applications/{applicationId}/documents/{documentName}.{documentType}':
    get:
      tags:
        - Funds Transfer (EFT-CAD)
      operationId: getEftCadApplicationDocuments
      description: |
        Get an EFT-CAD application document for the referenced applicationId, documentName and documentType.  The content type of the response returned will depend on the documentType passed into the path.
      produces:
        - image/png
        - image/jpeg
        - application/pdf
        - application/msword
        - application/vnd.openxmlformats-officedocument.wordprocessingml.document
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to get the document from'
          type: integer
        - name: documentName
          in: path
          required: true
          description: 'The name of the document to get'
          type: string
          enum: ["copy_id", "void_cheque", "bank_statement", "certificate", "registration", "board_members"]
        - name: documentType
          in: path
          required: true
          description: 'The type of the document to get'
          type: string
          enum: ["jpg", "jpeg", "doc", "docx", "pdf", "png"]
      responses:
        200:
          description: 'Document retrieved successfully'
          schema:
            type: file
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Document not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 'Unexpected error or application not found'
  '/v1/boarding/workflows/eft-cad/applications/{applicationId}/documents/{documentName}':
    delete:
      tags:
        - Funds Transfer (EFT-CAD)
      operationId: deleteEftCadApplicationDocuments
      description: |
        Deletes an EFT-CAD application document for the referenced applicationId and documentName. Returns the status of the application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to delete the document from'
          type: integer
        - name: documentName
          in: path
          required: true
          description: 'The name of the document to delete'
          type: string
          enum: ["copy_id", "void_cheque", "bank_statement", "certificate", "registration", "board_members"]
      responses:
        204:
          description: 'Document deleted successfully'
        400:
          description: 'Invalid document id or invalid api version'
          schema:
            $ref: '#/definitions/CombinedErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Document not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 'Unexpected error or application not found'

# PSP CAD WORKFLOW
  '/v1/boarding/workflows/psp-cad/applications':
    post:
      tags:
        - Credit Card Payments (PSP-CAD)
      operationId: createPspCadPspApplication
      description: |
        Creates a new PSP-CAD application. The state of the application will be returned in a successful request. The response will include an application id that should be used for all future requests to that application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: application
          in: body
          description: 'PSP-CAD application details'
          required: true
          schema:
            $ref: '#/definitions/PspCadApplicationRequest'
      responses:
        201:
          description: 'Application created'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Credit Card Payments (PSP-CAD)
      operationId: getPspCadApplications
      description: |
        Retrieves all applications referenced by the given criteria in the url. A search criteria can be a combination of the following:

           - state={state}
            - *Accepted values are "in\_progress", "in\_review", "on\_hold", "approved" and "rejected"*
           - created_before={date}
           - created_after={date}
           - updated_before={date}
           - updated_after={date}

        Documents file data will be excluded to limit the amount of data on the wire.
      produces:
        - application/json
      security:
        - api_key: []
      responses:
        200:
          description: 'Application(s) retrieved'
          schema:
           type: array
           items:
            $ref: '#/definitions/PspCadApplicationResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/psp-cad/applications/{applicationId}':
    put:
      tags:
        - Credit Card Payments (PSP-CAD)
      operationId: updatePspCadApplication
      description: |
        Updates a PSP-CAD application referenced by the given applicationId.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to update'
          type: integer
        - name: document
          in: body
          description: 'PSP-CAD application details'
          required: true
          schema:
            $ref: '#/definitions/PspCadApplicationRequest'
      responses:
        200:
          description: 'Application updated'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Credit Card Payments (PSP-CAD)
      operationId: getPspCadApplication
      description: |
        Retrieves a PSP-CAD application referenced by the given applicationId.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to retrieve'
          type: string
      responses:
        200:
          description: 'Application retrieved'
          schema:
            $ref: '#/definitions/PspCadApplicationResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
# PSP USD WORKFLOW
  '/v1/boarding/workflows/psp-usd/applications':
    post:
      tags:
        - Credit Card Payments (PSP-USD)
      operationId: createPspUsdPspApplication
      description: |
        Creates a new PSP-USD application. The state of the application will be returned in a successful request. The response will include an application id that should be used for all future requests to that application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: application
          in: body
          description: 'PSP-CAD application details'
          required: true
          schema:
            $ref: '#/definitions/PspUsdApplicationRequest'
      responses:
        201:
          description: 'Application created'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Credit Card Payments (PSP-USD)
      operationId: getPspUsdApplications
      description: |
        Retrieves all applications referenced by the given criteria in the url. A search criteria can be a combination of the following:

           - state={state}
            - *Accepted values are "in\_progress", "in\_review", "on\_hold", "approved" and "rejected"*
           - created_before={date}
           - created_after={date}
           - updated_before={date}
           - updated_after={date}

        Documents file data will be excluded to limit the amount of data on the wire.
      produces:
        - application/json
      security:
        - api_key: []
      responses:
        200:
          description: 'Application(s) retrieved'
          schema:
           type: array
           items:
            $ref: '#/definitions/PspUsdApplicationResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/psp-usd/applications/{applicationId}':
    put:
      tags:
        - Credit Card Payments (PSP-USD)
      operationId: updatePspUsdApplication
      description: |
        Updates a PSP-USD application referenced by the given applicationId.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to update'
          type: integer
        - name: document
          in: body
          description: 'PSP-USD application details'
          required: true
          schema:
            $ref: '#/definitions/PspUsdApplicationRequest'
      responses:
        200:
          description: 'Application updated'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Credit Card Payments (PSP-USD)
      operationId: getPspUsdApplication
      description: |
        Retrieves a PSP-USD application referenced by the given applicationId.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to retrieve'
          type: string
      responses:
        200:
          description: 'Application retrieved'
          schema:
            $ref: '#/definitions/PspUsdApplicationResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/psp-usd/applications/{applicationId}/documents':
    post:
      tags:
        - Credit Card Payments (PSP-USD)
      operationId: createPspUsdApplicationDocuments
      description: |
        Creates a PSP-USD application document for the referenced applicationId. Returns the status of the application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to create a document in'
          type: integer
        - name: document
          in: body
          description: 'Document details'
          required: true
          schema:
            $ref: '#/definitions/PspUsdFile'
      responses:
        200:
          description: 'Document created'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request data or invalid api version'
          schema:
            $ref: '#/definitions/CombinedErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/psp-usd/applications/{applicationId}/documents/{documentName}.{documentType}':
    get:
      tags:
        - Credit Card Payments (PSP-USD)
      operationId: getPspUsdApplicationDocuments
      description: |
        Get a PSP-USD application document for the referenced applicationId, documentName and documentType.  The content type of the response returned will depend on the documentType passed into the path.
      produces:
        - image/png
        - image/jpeg
        - application/pdf
        - application/msword
        - application/vnd.openxmlformats-officedocument.wordprocessingml.document
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to get the document from'
          type: integer
        - name: documentName
          in: path
          required: true
          description: 'The name of the document to get'
          type: string
          enum: ["id_applicant", "bank_statement", "pci_saq_document"]
        - name: documentType
          in: path
          required: true
          description: 'The type of the document to get'
          type: string
          enum: ["jpg", "jpeg", "doc", "docx", "pdf", "png"]
      responses:
        200:
          description: 'Document retrieved successfully'
          schema:
            type: file
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Document not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 'Unexpected error or application not found'
  '/v1/boarding/workflows/psp-usd/applications/{applicationId}/documents/{documentName}':
    delete:
      tags:
        - Credit Card Payments (PSP-USD)
      operationId: deletePspUsdApplicationDocuments
      description: |
        Deletes a PSP-USD application document for the referenced applicationId and documentName. Returns the status of the application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to delete the document from'
          type: integer
        - name: documentName
          in: path
          required: true
          description: 'The name of the document to delete'
          type: string
          enum: ["id_applicant", "bank_statement", "pci_saq_document"]
      responses:
        204:
          description: 'Document deleted successfully'
        400:
          description: 'Invalid document id or invalid api version'
          schema:
            $ref: '#/definitions/CombinedErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Document not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 'Unexpected error or application not found'

# GW CDN WORKFLOW
  '/v1/boarding/workflows/gw-cdn/applications':
    post:
      tags:
        - Gateway application (GW-CDN)
      operationId: createGwCdnApplication
      description: |
        Creates a new GW-CDN application. The state of the application will be returned in a successful request. The response will include an application id that should be used for all future requests to that application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: application
          in: body
          description: 'GW-CDN application details'
          required: true
          schema:
            $ref: '#/definitions/GwCdnApplicationRequest'
      responses:
        201:
          description: 'Application created'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Gateway application (GW-CDN)
      operationId: getGwCdnApplications
      description: |
        Retrieves all applications referenced by the given criteria in the url. A search criteria can be a combination of the following:

           - state={state}
            - *Accepted values are "in\_progress", "in\_review", "on\_hold", "approved" and "rejected"*
           - created_before={date}
           - created_after={date}
           - updated_before={date}
           - updated_after={date}

        Documents file data will be excluded to limit the amount of data on the wire.
      produces:
        - application/json
      security:
        - api_key: []
      responses:
        200:
          description: 'Application(s) retrieved'
          schema:
           type: array
           items:
            $ref: '#/definitions/GwCdnApplicationRequest'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/gw-cdn/applications/{applicationId}':
    put:
      tags:
        - Gateway application (GW-CDN)
      operationId: updateGwCdnApplication
      description: |
        Updates a GW-CDN application referenced by the given applicationId.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to update'
          type: integer
        - name: document
          in: body
          description: 'Application details'
          required: true
          schema:
            $ref: '#/definitions/GwCdnApplicationRequest'
      responses:
        200:
          description: 'Application updated'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Gateway application (GW-CDN)
      operationId: getGwCdnApplication
      description: |
        Retrieves a GW-CDN application referenced by the given applicationId.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to retrieve'
          type: string
      responses:
        200:
          description: 'Application retrieved'
          schema:
            $ref: '#/definitions/GwCdnApplicationResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
# GW USA WORKFLOW
  '/v1/boarding/workflows/gw-usa/applications':
    post:
      tags:
        - Gateway application (GW-USA)
      operationId: createGwUsaApplication
      description: |
        Creates a new GW-USA application. The state of the application will be returned in a successful request. The response will include an application id that should be used for all future requests to that application.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: application
          in: body
          description: 'GW-USA application details'
          required: true
          schema:
            $ref: '#/definitions/GwUsaApplicationRequest'
      responses:
        201:
          description: 'Application created'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Gateway application (GW-USA)
      operationId: getGwUsaApplications
      description: |
        Retrieves all applications referenced by the given criteria in the url. A search criteria can be a combination of the following:

           - state={state}
            - *Accepted values are "in\_progress", "in\_review", "on\_hold", "approved" and "rejected"*
           - created_before={date}
           - created_after={date}
           - updated_before={date}
           - updated_after={date}

        Documents file data will be excluded to limit the amount of data on the wire.
      produces:
        - application/json
      security:
        - api_key: []
      responses:
        200:
          description: 'Application(s) retrieved'
          schema:
           type: array
           items:
            $ref: '#/definitions/GwUsaApplicationResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/v1/boarding/workflows/gw-usa/applications/{applicationId}':
    put:
      tags:
        - Gateway application (GW-USA)
      operationId: updateGwUsaApplication
      description: |
        Updates a GW-USA application referenced by the given applicationId.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to update'
          type: integer
        - name: document
          in: body
          description: 'GW-USA application details'
          required: true
          schema:
            $ref: '#/definitions/GwUsaApplicationRequest'
      responses:
        200:
          description: 'Application updated'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Gateway application (GW-USA)
      operationId: getGwUsaApplication
      description: |
        Retrieves a GW-USA application referenced by the given applicationId.
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to retrieve'
          type: string
      responses:
        200:
          description: 'Application retrieved'
          schema:
            $ref: '#/definitions/GwUsaApplicationResponse'
        403:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/ErrorResponse'
# PSP NZD WORKFLOW
  '/v1/boarding/workflows/psp-nz/applications':
    post:
      tags:
        - Credit Card Payments (PSP NZD)
      operationId: createPspNzdPspApplication
      description: 'Creates a new New Zealand PSP application. The status of the application will be returned in the status object. A Location header that points to the URL of the new resource will be available in the response. The Location header has an application id that should be used for all future requests to that application.'
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: application
          in: body
          description: 'Application details'
          required: true
          schema:
            $ref: '#/definitions/PspNzdApplication'
      responses:
        201:
          description: 'Application created'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        500:
          description: 'Unexpected error'
          schema:
            $ref: '#/definitions/Error'

    get:
      tags:
        - Credit Card Payments (PSP NZD)
      operationId: getPspNzdApplications
      description: |
        Retrieves all New Zealand PSP applications referenced by the given criteria in the url. A search criteria can be a combination of the following:

           - state={state}
            - *Accepted values are "in\_progress", "in\_review", "on\_hold", "approved" and "rejected"*
           - created_before={date}
           - created_after={date}
           - updated_before={date}
           - updated_after={date}

        Documents file data will be excluded to limit the amount of data on the wire.
      produces:
        - application/json
      security:
        - api_key: []
      responses:
        200:
          description: 'Application(s) retrieved'
          schema:
           type: array
           items:
              $ref: '#/definitions/PspNzdApplication'
        400:
          description: 'Invalid request'
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        404:
          description: 'Applications not found'
          schema:
            $ref: '#/definitions/Error'
        500:
          description: 'Unexpected error'
          schema:
            $ref: '#/definitions/Error'
  '/v1/boarding/workflows/psp-nz/applications/{applicationId}':
    put:
      tags:
        - Credit Card Payments (PSP NZD)
      operationId: updatePspNzdApplication
      description: 'Updates a New Zealand PSP application referenced by the given applicationId.'
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to update'
          type: integer
        - name: document
          in: body
          description: 'Application details'
          required: true
          schema:
            $ref: '#/definitions/PspNzdApplication'
      responses:
        200:
          description: 'Application Updated.'
          schema:
            $ref: '#/definitions/ApplicationResponse'
        400:
          description: 'Invalid request'
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/Error'
        500:
          description: 'Unexpected error'
          schema:
            $ref: '#/definitions/Error'

    get:
      tags:
        - Credit Card Payments (PSP NZD)
      operationId: getPspNzdApplication
      description: 'Retrieves a New Zealand PSP application referenced by the given applicationId.'
      produces:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: applicationId
          in: path
          required: true
          description: 'The id of the application to retrieve'
          type: string
      responses:
        200:
          description: 'Application retrieved'
          schema:
            $ref: '#/definitions/PspNzdApplication'
        400:
          description: 'Invalid request'
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        404:
          description: 'Application not found'
          schema:
            $ref: '#/definitions/Error'
        500:
          description: 'Unexpected error'
          schema:
            $ref: '#/definitions/Error'

definitions:
  EftCadApplicationRequest:
    description: 'Defines an EFT-CAD application request'
    additionalProperties: false
    type: object
    required:
      - applicant
      - business
      - pricing_id
    properties:
      language:
        type: string
        enum: ['en', 'fr']
        maxLength: 2
        description: "The language that the application was created in."
      pricing_id:
        type: string
        maxLength: 32
        description: 'The identifier for the pricing package associated with an application'
      applicant:
        $ref: '#/definitions/EftCadApplicant'
      business:
        $ref: '#/definitions/EftCadBusiness'

  EftCadApplicationResponse:
    description: 'Defines an EFT-CAD application response'
    additionalProperties: false
    type: object
    properties:
      id:
        type: integer
        description: 'The identifier for the application'
      language:
        type: string
        description: "The language that the application was created in."
      url:
        type: string
        description: 'The URL of the application'
      type:
        type: string
        description: 'The workflow that the application is associated with'
      api_version:
        type: string
        description: 'The API version that the application was created with'
      merchant_id:
        type: integer
        description: 'This merchant identifier is populated when the application is approved and a merchant account has been associated.'
      pricing_id:
        type: string
        description: 'The identifier for the pricing package associated with an application'
      partner_username:
        type: string
        description: 'The username of the partner the application is associated with'
      pricing_package:
        $ref: '#/definitions/PricingPackage'
      status:
        $ref: '#/definitions/ApplicationStatus'
      applicant:
        $ref: '#/definitions/EftCadApplicant'
      business:
        $ref: '#/definitions/EftCadBusiness'

  AchUsdApplicationRequest:
    description: 'Defines an ACH-USD application request'
    additionalProperties: false
    type: object
    required:
      - applicant
      - business
      - pricing_id
    properties:
      language:
        type: string
        enum: ['en', 'fr']
        maxLength: 2
        description: "The language that the application was created in."
      pricing_id:
        type: string
        maxLength: 32
        description: 'The identifier for the pricing package associated with an application'
      applicant:
        $ref: '#/definitions/Applicant'
      business:
        $ref: '#/definitions/AchUsdBusiness'

  AchUsdApplicationResponse:
    description: 'Defines an ACH-USD application response'
    additionalProperties: false
    type: object
    properties:
      id:
        type: integer
        description: 'The identifier for the application'
      language:
        type: string
        description: "The language that the application was created in."
      url:
        type: string
        description: 'The URL of the application'
      type:
        type: string
        description: 'The workflow that the application is associated with'
      api_version:
        type: string
        description: 'The API version that the application was created with'
      merchant_id:
        type: integer
        description: 'This merchant identifier is populated when the application is approved and a merchant account has been associated.'
      pricing_id:
        type: string
        description: 'The identifier for the pricing package associated with an application'
      partner_username:
        type: string
        description: 'The username of the partner the application is associated with'
      pricing_package:
        $ref: '#/definitions/PricingPackage'
      status:
        $ref: '#/definitions/ApplicationStatus'
      applicant:
        $ref: '#/definitions/Applicant'
      business:
        $ref: '#/definitions/AchUsdBusiness'

  SepaEurApplicationRequest:
    description: 'Defines a SEPA-EUR application request'
    additionalProperties: false
    type: object
    required:
      - applicant
      - business
      - pricing_id
    properties:
      language:
        type: string
        enum: ['en', 'fr']
        maxLength: 2
        description: "The language that the application was created in."
      pricing_id:
        type: string
        maxLength: 32
        description: 'The reference number for the pricing package associated with an application'
      applicant:
        $ref: '#/definitions/Applicant'
      business:
        $ref: '#/definitions/SepaEurBusiness'

  SepaEurApplicationResponse:
    description: 'Defines a SEPA-EUR application response'
    type: object
    properties:
      id:
        type: integer
        description: 'The identifier for the application'
      language:
        type: string
        description: "The language that the application was created in."
      url:
        type: string
        description: 'The URL of the application'
      type:
        type: string
        description: 'The workflow that the application is associated with'
      api_version:
        type: string
        description: 'The API version that the application was created with'
      merchant_id:
        type: integer
        description: 'This merchant identifier is populated when the application is approved and a merchant account has been associated.'
      pricing_id:
        type: string
        description: 'The identifier for the pricing package associated with an application'
      partner_username:
        type: string
        description: 'The username of the partner the application is associated with'
      pricing_package:
        $ref: '#/definitions/PricingPackage'
      status:
        $ref: '#/definitions/ApplicationStatus'
      applicant:
        $ref: '#/definitions/Applicant'
      business:
        $ref: '#/definitions/SepaEurBusiness'

  BacsGbpApplicationRequest:
    description: 'Defines a BACS-GBP application request'
    additionalProperties: false
    type: object
    required:
      - applicant
      - business
      - pricing_id
    properties:
      language:
        type: string
        enum: ['en', 'fr']
        maxLength: 2
        description: "The language that the application was created in."
      pricing_id:
        type: string
        maxLength: 32
        description: 'The identifier for the pricing package associated with an application'
      applicant:
        $ref: '#/definitions/Applicant'
      business:
        $ref: '#/definitions/BacsGbpBusiness'

  BacsGbpApplicationResponse:
    description: 'Defines a BACS-GBP application response'
    type: object
    properties:
      id:
        type: integer
        description: 'The identifier for the application'
      language:
        type: string
        description: "The language that the application was created in."
      url:
        type: string
        description: 'The URL of the application'
      type:
        type: string
        description: 'The workflow that the application is associated with'
      api_version:
        type: string
        description: 'The API version that the application was created with'
      merchant_id:
        type: integer
        description: 'This merchant identifier is populated when the application is approved and a merchant account has been associated.'
      pricing_id:
        type: string
        description: 'The identifier for the pricing package associated with an application'
      pricing_package:
        $ref: '#/definitions/PricingPackage'
      partner_username:
        type: string
        description: 'The username of the partner the application is associated with'
      status:
        $ref: '#/definitions/ApplicationStatus'
      applicant:
        $ref: '#/definitions/Applicant'
      business:
        $ref: '#/definitions/BacsGbpBusiness'

  PspCadApplicationRequest:
    description: 'Defines a PSP-CAD application request'
    additionalProperties: false
    type: object
    required:
      - applicant
      - business
      - pricing_id
    properties:
      language:
        type: string
        enum: ['en', 'fr']
        maxLength: 2
        description: "The language that the application was created in."
      pricing_id:
        type: string
        maxLength: 32
        description: 'The identifier for the pricing package associated with an application'
      applicant:
        $ref: '#/definitions/PspCadApplicant'
      business:
        $ref: '#/definitions/PspCadBusiness'

  PspCadApplicationResponse:
    description: 'Defines a PSP-CAD application response'
    additionalProperties: false
    type: object
    properties:
      id:
        type: integer
        description: 'The identifier for the application'
      language:
        type: string
        description: "The language that the application was created in."
      url:
        type: string
        description: 'The URL of the application'
      type:
        type: string
        description: 'The workflow that the application is associated with'
      api_version:
        type: string
        description: 'The API version that the application was created with'
      merchant_id:
        type: integer
        description: 'This merchant identifier is populated when the application is approved and a merchant account has been associated.'
      pricing_id:
        type: string
        description: 'The identifier for the pricing package associated with an application'
      pricing_package:
        $ref: '#/definitions/PricingPackage'
      partner_username:
        type: string
        description: 'The username of the partner the application is associated with'
      status:
        $ref: '#/definitions/ApplicationStatus'
      applicant:
        $ref: '#/definitions/PspCadApplicant'
      business:
        $ref: '#/definitions/PspCadBusiness'

  PspUsdApplicationRequest:
    description: 'Defines a PSP-USD application request'
    additionalProperties: false
    type: object
    required:
      - applicant
      - business
      - pricing_id
    properties:
      language:
        type: string
        enum: ['en', 'fr']
        maxLength: 2
        description: "The language that the application was created in."
      pricing_id:
        type: string
        maxLength: 32
        description: 'The identifier for the pricing package associated with an application'
      applicant:
        $ref: '#/definitions/PspUsdApplicant'
      business:
        $ref: '#/definitions/PspUsdBusiness'

  PspUsdApplicationResponse:
    description: 'Defines a PSP-USD application response'
    additionalProperties: false
    type: object
    properties:
      id:
        type: integer
        description: 'The identifier for the application'
      language:
        type: string
        description: "The language that the application was created in."
      url:
        type: string
        description: 'The URL of the application'
      type:
        type: string
        description: 'The workflow that the application is associated with'
      api_version:
        type: string
        description: 'The API version that the application was created with'
      merchant_id:
        type: integer
        description: 'This merchant identifier is populated when the application is approved and a merchant account has been associated.'
      pricing_id:
        type: string
        description: 'The identifier for the pricing package associated with an application'
      pricing_package:
        $ref: '#/definitions/PricingPackage'
      partner_username:
        type: string
        description: 'The username of the partner the application is associated with'
      status:
        $ref: '#/definitions/ApplicationStatus'
      applicant:
        $ref: '#/definitions/PspUsdApplicant'
      business:
        $ref: '#/definitions/PspUsdBusiness'

  GwCdnApplicationRequest:
    description: 'Defines a GW-CDN application request'
    additionalProperties: false
    type: object
    required:
      - applicant
      - business
      - pricing_id
    properties:
      language:
        type: string
        enum: ['en', 'fr']
        maxLength: 2
        description: "The language that the application was created in."
      pricing_id:
        type: string
        maxLength: 32
        description: 'The identifier for the pricing package associated with an application'
      applicant:
        $ref: '#/definitions/Applicant'
      business:
        $ref: '#/definitions/GwCdnBusiness'
      terminal:
        $ref: '#/definitions/GwCdnTerminal'

  GwCdnApplicationResponse:
    description: 'Defines a GW-USA application'
    additionalProperties: false
    type: object
    properties:
      id:
        type: integer
        description: 'The identifier for the application'
      language:
        type: string
        description: "The language that the application was created in."
      url:
        type: string
        description: 'The URL of the application'
      type:
        type: string
        description: 'The workflow that the application is associated with'
      api_version:
        type: string
        description: 'The API version that the application was created with'
      merchant_id:
        type: integer
        description: 'This merchant identifier is populated when the application is approved and a merchant account has been associated.'
      pricing_id:
        type: string
        description: 'The identifier for the pricing package associated with an application'
      pricing_package:
        $ref: '#/definitions/PricingPackage'
      partner_username:
        type: string
        description: 'The username of the partner the application is associated with'
      status:
        $ref: '#/definitions/ApplicationStatus'
      applicant:
        $ref: '#/definitions/Applicant'
      business:
        $ref: '#/definitions/GwCdnBusiness'
      terminal:
        $ref: '#/definitions/GwCdnTerminal'

  GwUsaApplicationRequest:
    description: 'Defines a GW-USA application request'
    additionalProperties: false
    type: object
    required:
      - applicant
      - business
      - pricing_id
    properties:
      language:
        type: string
        enum: ['en', 'fr']
        maxLength: 2
        description: "The language that the application was created in."
      pricing_id:
        type: string
        maxLength: 32
        description: 'The identifier for the pricing package associated with an application'
      applicant:
        $ref: '#/definitions/Applicant'
      business:
        $ref: '#/definitions/GwUsaBusiness'
      terminal:
        $ref: '#/definitions/GwUsaTerminal'

  GwUsaApplicationResponse:
    description: 'Defines a GW-USA application'
    additionalProperties: false
    type: object
    properties:
      id:
        type: integer
        description: 'The identifier for the application'
      language:
        type: string
        description: "The language that the application was created in."
      url:
        type: string
        description: 'The URL of the application'
      type:
        type: string
        description: 'The workflow that the application is associated with'
      api_version:
        type: string
        description: 'The API version that the application was created with'
      merchant_id:
        type: integer
        description: 'This merchant identifier is populated when the application is approved and a merchant account has been associated.'
      pricing_id:
        type: string
        description: 'The identifier for the pricing package associated with an application'
      pricing_package:
        $ref: '#/definitions/PricingPackage'
      partner_username:
        type: string
        description: 'The username of the partner the application is associated with'
      status:
        $ref: '#/definitions/ApplicationStatus'
      applicant:
        $ref: '#/definitions/Applicant'
      business:
        $ref: '#/definitions/GwUsaBusiness'
      terminal:
        $ref: '#/definitions/GwUsaTerminal'

  PspNzdApplication:
    description: 'Defines a PSP New Zealander application'
    additionalProperties: false
    type: object
    required:
      - applicant
      - business
    properties:
      id:
        type: integer
        format: int32
        description: 'This application identifier is used to identify an application. [ReadOnly]'
      merchant_id:
        type: integer
        description: 'This merchant identifier is populated when the application is approved and a merchant account has been associated. [ReadOnly]'
      status:
        $ref: '#/definitions/ApplicationResponse'
      applicant:
        $ref: '#/definitions/PspNzdApplicant'
      business:
        $ref: '#/definitions/PspNzdBusiness'

  GwCdnBusiness:
    description: 'The details of an Gateway Canadian business'
    additionalProperties: false
    type: object
    required:
      - company_name
      - address
      - bank_account
    properties:
      company_name:
        type: string
        maxLength: 64
      merchant_category:
        description: 'This is the 4 digit merchant category code'
        type: string
        minLength: 4
        maxLength: 4
      website_url:
        type: string
        maxLength: 128
        format: 'uri'
      address:
        $ref: '#/definitions/Address'
      bank_account:
        $ref: '#/definitions/CanadianBankAccount'

  GwUsaBusiness:
    description: 'The details of an Gateway US business'
    additionalProperties: false
    type: object
    required:
      - company_name
      - address
      - bank_account
    properties:
      company_name:
        type: string
        maxLength: 64
      merchant_category:
        description: 'This is the 4 digit merchant category code'
        type: string
        minLength: 4
        maxLength: 4
      website_url:
        type: string
        maxLength: 128
        format: 'uri'
      address:
        $ref: '#/definitions/Address'
      bank_account:
        $ref: '#/definitions/AmericanBankAccount'

  GwCdnTerminal:
    description: 'The details for the terminal of a gateway application'
    additionalProperties: false
    type: object
    required:
      - terminal_type
    properties:
      terminal_type:
        type: string
        description: 'This is type of terminal'
        enum: ["td","first_data_nashville","chase_paymentech","tsys","global","elavon","moneris", "desjardins"]
      td_terminal:
        $ref: '#/definitions/TdTerminal'
      first_data_nashville_terminal:
        $ref: '#/definitions/FirstDataNashvilleTerminal'
      chase_paymentech_terminal:
        $ref: '#/definitions/ChasePaymentechTerminal'
      tsys_terminal:
        $ref: '#/definitions/TsysTerminal'
      global_terminal:
        $ref: '#/definitions/GlobalTerminal'
      elavon_terminal:
        $ref: '#/definitions/ElavonTerminal'
      moneris_terminal:
        $ref: '#/definitions/MonerisTerminal'
      desjardins_terminal:
        $ref: '#/definitions/DesjardinsTerminal'

  GwUsaTerminal:
    description: 'The details for the terminal of a gateway application'
    additionalProperties: false
    type: object
    required:
      - terminal_type
    properties:
      terminal_type:
        type: string
        description: 'This is type of terminal'
        enum: ["first_data_nashville","chase_paymentech","tsys","global","elavon","moneris"]
      first_data_nashville_terminal:
        $ref: '#/definitions/FirstDataNashvilleTerminal'
      chase_paymentech_terminal:
        $ref: '#/definitions/ChasePaymentechTerminal'
      tsys_terminal:
        $ref: '#/definitions/TsysTerminal'
      global_terminal:
        $ref: '#/definitions/GlobalTerminal'
      elavon_terminal:
        $ref: '#/definitions/ElavonTerminal'


  TdTerminal:
    type: object
    description: 'TD terminal'
    additionalProperties: false
    properties:
      terminal_number:
        type: string
        minLength: 12
        maxLength: 12
      visa_number:
        description: 'The merchant number or merchant ID assigned by the processor for Visa cards'
        type: string
        minLength: 8
        maxLength: 8
      mc_number:
        description: 'The merchant number or merchant ID assigned by the processor for Mastercard cards'
        type: string
        minLength: 8
        maxLength: 8
      visa_debit_number:
        description: 'The merchant number or merchant ID assigned by the processor for Visa Debit cards'
        type: string
        minLength: 8
        maxLength: 8
      debit_mc_number:
        description: 'The merchant number or merchant ID assigned by the processor for Debit Mastercards'
        type: string
        minLength: 8
        maxLength: 8
      amex_number:
        description: 'The merchant number or merchant ID assigned by the processor for American Express cards'
        type: string
        minLength: 10
        maxLength: 10
      discover_number:
        description: 'The merchant number or merchant ID assigned by the processor for Discover cards'
        type: string
        minLength: 11
        maxLength: 11

  FirstDataNashvilleTerminal:
    type: object
    description: 'First Data Nashville terminal'
    additionalProperties: false
    properties:
      merchant_id:
        type: string
        minLength: 7
        maxLength: 7
      terminal_number:
        type: string
        minLength: 6
        maxLength: 8
      visa_number:
        description: 'The merchant number or merchant ID assigned by the processor for Visa cards'
        type: string
        minLength: 11
        maxLength: 11
      mc_number:
        description: 'The merchant number or merchant ID assigned by the processor for Mastercards'
        type: string
        minLength: 11
        maxLength: 11
      discover_merchant_id:
        description: 'The merchant number or merchant ID assigned by the processor for Discover cards'
        type: string
        minLength: 15
        maxLength: 15
      amex_merchant_id:
        description: 'The merchant number or merchant ID assigned by the processor for American Express cards'
        type: string
        minLength: 10
        maxLength: 10
      visa_debit_number:
        description: 'The merchant number or merchant ID assigned by the processor for Visa Debit cards'
        type: string
        minLength: 11
        maxLength: 11
      jcb_number:
        description: 'The merchant number or merchant ID assigned by the processor for JCB cards'
        type: string
        minLength: 10
        maxLength: 11
      token_type:
        description: 'Applies only to First Data Mobile Pay Plus accounts using iCMP card reader, not for online card processing'
        type: string
        minLength: 4
        maxLength: 4

  ChasePaymentechTerminal:
    type: object
    description: 'Chase Paymentech terminal'
    additionalProperties: false
    properties:
      client_number:
        type: string
        minLength: 4
        maxLength: 4
      merchant_number:
        type: string
        minLength: 12
        maxLength: 12
      terminal_number:
        type: string
        minLength: 3
        maxLength: 3
      net_connect_user_id:
        type: string
        minLength: 6
        maxLength: 32
      net_connect_pw:
        type: string
        minLength: 6
        maxLength: 32
      visa_number:
        description: 'The merchant number or merchant ID assigned by the processor for Visa cards'
        type: string
        minLength: 7
        maxLength: 12
      mc_number:
        description: 'The merchant number or merchant ID assigned by the processor for Mastercards'
        type: string
        minLength: 7
        maxLength: 12
      amex_number:
        description: 'The merchant number or merchant ID assigned by the processor for American Express cards'
        type: string
        minLength: 10
        maxLength: 10
      discover_number:
        description: 'The merchant number or merchant ID assigned by the processor for Discover cards'
        type: string
        minLength: 15
        maxLength: 15

  TsysTerminal:
    type: object
    description: 'TSYS terminal'
    additionalProperties: false
    properties:
      acquirer_bin:
        type: string
        minLength: 6
        maxLength: 6
      agent_bank_number:
        type: string
        minLength: 6
        maxLength: 6
      agent_chain_number:
        type: string
        minLength: 6
        maxLength: 6
      merchant_number:
        type: string
        minLength: 12
        maxLength: 12
      store_number:
        type: string
        minLength: 4
        maxLength: 4
      terminal_number:
        type: string
        minLength: 4
        maxLength: 4
      terminal_id:
        type: string
        minLength: 8
        maxLength: 8
      visa_number:
        description: 'The merchant number or merchant ID assigned by the processor for Visa cards'
        type: string
        minLength: 11
        maxLength: 12
      mc_number:
        description: 'The merchant number or merchant ID assigned by the processor for Mastercards'
        type: string
        minLength: 11
        maxLength: 12
      amex_number:
        description: 'The merchant number or merchant ID assigned by the processor for American Express cards'
        type: string
        minLength: 10
        maxLength: 10
      discover_number:
        description: 'The merchant number or merchant ID assigned by the processor for Discover cards'
        type: string
        minLength: 15
        maxLength: 15

  GlobalTerminal:
    type: object
    description: 'Global terminal'
    additionalProperties: false
    properties:
      terminal_id:
        type: string
        minLength: 11
        maxLength: 11
      bin_number:
        type: string
        minLength: 6
        maxLength: 6
      visa_number:
        description: 'The merchant number or merchant ID assigned by the processor for Visa cards'
        type: string
        minLength: 11
        maxLength: 12
      mc_number:
        description: 'The merchant number or merchant ID assigned by the processor for Mastercards'
        type: string
        minLength: 11
        maxLength: 12
      amex_number:
        description: 'The merchant number or merchant ID assigned by the processor for American Express cards'
        type: string
        minLength: 10
        maxLength: 10
      jcb_number:
        description: 'The merchant number or merchant ID assigned by the processor for JCB cards'
        type: string
        minLength: 10
        maxLength: 11
      discover_number:
        description: 'The merchant number or merchant ID assigned by the processor for Discover cards'
        type: string
        minLength: 15
        maxLength: 15

  DesjardinsTerminal:
    type: object
    description: 'Desjardins terminal'
    additionalProperties: false
    properties:
      terminal_id:
        type: string
        minLength: 8
        maxLength: 8
      visa_number:
        description: 'The merchant number or merchant ID assigned by the processor for Visa cards'
        type: string
        minLength: 6
        maxLength: 6
      mc_number:
        description: 'The merchant number or merchant ID assigned by the processor for Mastercards'
        type: string
        minLength: 6
        maxLength: 6
      amex_number:
        description: 'The merchant number or merchant ID assigned by the processor for American Express cards'
        type: string
        minLength: 6
        maxLength: 6
      visa_debit_number:
        description: 'The merchant number or merchant ID assigned by the processor for Visa Debit cards'
        type: string
        minLength: 6
        maxLength: 6
      jcb_number:
        description: 'The merchant number or merchant ID assigned by the processor for JCB cards'
        type: string
        minLength: 10
        maxLength: 11

  ElavonTerminal:
    type: object
    description: 'Elavon terminal'
    additionalProperties: false
    properties:
      bank_number:
        type: string
        minLength: 6
        maxLength: 6
      terminal_id:
        type: string
        minLength: 16
        maxLength: 16
      visa_number:
        description: 'The merchant number or merchant ID assigned by the processor for Visa cards'
        type: string
        minLength: 8
        maxLength: 12
      mc_number:
        description: 'The merchant number or merchant ID assigned by the processor for Mastercards'
        type: string
        minLength: 8
        maxLength: 12
      amex_number:
        description: 'The merchant number or merchant ID assigned by the processor for American Express cards'
        type: string
        minLength: 10
        maxLength: 10
      discover_number:
        description: 'The merchant number or merchant ID assigned by the processor for Discover cards'
        type: string
        minLength: 15
        maxLength: 15

  MonerisTerminal:
    type: object
    description: 'Moneris terminal'
    additionalProperties: false

  Applicant:
    description: 'The individual completing the application'
    additionalProperties: false
    type: object
    required:
      - first_name
      - last_name
      - phone_number
      - agreement
      - email
    properties:
      first_name:
        type: string
        maxLength: 64
      last_name:
        type: string
        maxLength: 64
      phone_number:
        type: string
        maxLength: 15
      agreement:
        $ref: '#/definitions/Agreement'
      email:
        type: string
        maxLength: 500

  EftCadApplicant:
    description: 'The individual completing the application'
    additionalProperties: false
    type: object
    required:
      - first_name
      - last_name
      - phone_number
      - agreement
      - email
      - date_of_birth
    properties:
      first_name:
        type: string
        maxLength: 64
      last_name:
        type: string
        maxLength: 64
      phone_number:
        type: string
        maxLength: 15
      date_of_birth:
        type: string
        format: date-time
        description: 'Defines the birthday in ISO 8601 format with a timezone'
      agreement:
        $ref: '#/definitions/Agreement'
      email:
        type: string
        maxLength: 500

  PspCadApplicant:
    description: 'The individual completing the application'
    additionalProperties: false
    type: object
    required:
      - first_name
      - last_name
      - phone_number
      - date_of_birth
      - address
      - agreement
      - email
    properties:
      first_name:
        type: string
        maxLength: 64
      last_name:
        type: string
        maxLength: 64
      social_insurance_number:
        type: string
        description: "This is the social insurance number"
        maxLength: 9
      date_of_birth:
        type: string
        format: date-time
        description: 'Defines the birthday in ISO 8601 format with a timezone'
      resided_over_years:
        type: boolean
        description: "This is used to determine if the applicant has resided at this address for at last 2 years"
      phone_number:
        type: string
        maxLength: 15
      agreement:
        $ref: '#/definitions/Agreement'
      address:
        $ref: '#/definitions/Address'
      email:
        type: string
        maxLength: 500

  PspUsdApplicant:
    description: 'The individual completing the application'
    additionalProperties: false
    type: object
    required:
      - social_security_number
      - first_name
      - last_name
      - phone_number
      - date_of_birth
      - citizenship
      - address
      - agreement
      - position
      - email
    properties:
      first_name:
        type: string
        maxLength: 20
      last_name:
        type: string
        maxLength: 20
      social_security_number:
        type: string
        description: "This is the social security number"
        pattern: '^\d{3}-?\d{2}-?\d{4}$'
      date_of_birth:
        type: string
        format: date-time
        description: 'Defines the birthday in ISO 8601 format with a timezone'
      citizenship:
        type: string
        description: "Valid ISO 3166-1 country code"
        enum: ["AD", "AE", "AF", "AG", "AI", "AL", "AM", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW"]
      phone_number:
        type: string
        pattern: '^\d{1,20}$'
      position:
        type: string
        description: "The position of the applicant"
        enum: ["owner","co_owner","president","legal_contact","secretary_treasurer","partner","general_manager","administrator","vice_president","director","ceo","corporate_officer","principal","cfo","coo"]
      agreement:
        $ref: '#/definitions/Agreement'
      address:
        $ref: '#/definitions/PspUsdAddress'
      email:
        type: string
        maxLength: 70

  PspNzdApplicant:
    description: 'The individual completing the application'
    additionalProperties: false
    type: object
    required:
      - first_name
      - last_name
      - email
    properties:
      title:
        type: string
        maxLength: 4
        enum: ["Mr","Miss","Ms","Mrs","Mx"]
      first_name:
        type: string
        maxLength: 64
      last_name:
        type: string
        maxLength: 64
      date_of_birth:
        type: string
        format: date-time
        description: 'Defines the birthday in ISO 8601 format with a timezone'
      agreement:
        $ref: '#/definitions/Agreement'
      address:
        $ref: '#/definitions/Address'
      email:
        type: string
        maxLength: 500

  EftCadBusiness:
    description: 'The details of an EFT-CAD business'
    additionalProperties: false
    type: object
    required:
      - company_name
      - annual_sales
      - entity_type
      - start_date
      - dba_name
      - bank_account
      - batch_settings
      - address
      - services_description
    properties:
      company_name:
        type: string
        maxLength: 64
      annual_sales:
        type: number
        format: float32
        description: 'This is the annual sales volume in CAD.'
      entity_type:
        type: string
        description: 'This is the business entity type'
        enum: ["sole_proprietor","partnership","limited_partnership","joint_venture","corporation","non_profit","publicly_traded","charitable_organization"]
      website_url:
        type: string
        maxLength: 128
        format: 'uri'
      services_description:
        type: string
        maxLength: 500
        description: 'This is the description of the goods and/or services the merchant sells'
      registration_location:
        type: string
        maxLength: 64
      start_date:
        type: string
        format: date-time
        description: 'This is the business start date in ISO 8601 format with a timezone'
      business_number:
        type: string
        maxLength: 32
      dba_name:
        type: string
        description: 'This is the "doing business as" name'
        maxLength: 32
      batch_settings:
        $ref: '#/definitions/BatchSettings'
      address:
        $ref: '#/definitions/Address'
      directors:
        type: array
        maxItems: 5
        minItems: 1
        items:
          $ref: '#/definitions/EftCadDirector'
      bank_account:
          $ref: '#/definitions/CanadianBankAccount'
      documents:
        type: array
        description: 'A maximum of five documents is allowed'
        minItems: 0
        maxItems: 5
        items:
          $ref: '#/definitions/EftCadFile'

  AchUsdBusiness:
    description: 'The details of an ACH American business'
    additionalProperties: false
    type: object
    required:
      - company_name
      - annual_sales
      - entity_type
      - start_date
      - dba_name
      - bank_account
      - batch_settings
      - address
      - directors
    properties:
      company_name:
        type: string
        maxLength: 64
      annual_sales:
        type: number
        format: float32
        description: 'This is the annual sales volume in USD.'
      entity_type:
        type: string
        description: 'This is the business entity type'
        enum: ["sole_proprietor","partnership","limited_partnership","joint_venture","corporation","non_profit","publicly_traded","charitable_organization"]
      website_url:
        type: string
        maxLength: 128
        format: uri
      registration_location:
        type: string
        maxLength: 64
      start_date:
        type: string
        format: date-time
        description: 'This is the business start date in ISO 8601 format with a timezone'
      business_number:
        type: string
        maxLength: 32
      dba_name:
        type: string
        description: 'This is the "doing business as" name'
        maxLength: 32
      batch_settings:
        $ref: '#/definitions/BatchSettings'
      address:
        $ref: '#/definitions/Address'
      directors:
        type: array
        maxItems: 5
        minItems: 1
        items:
          $ref: '#/definitions/AchUsdDirector'
      bank_account:
          $ref: '#/definitions/AmericanBankAccount'
      documents:
        type: array
        description: 'A maximum of five documents is allowed'
        minItems: 0
        maxItems: 5
        items:
          $ref: '#/definitions/AchUsdFile'

  SepaEurBusiness:
    description: 'The details of a European business'
    additionalProperties: false
    type: object
    required:
      - company_name
      - annual_sales
      - entity_type
      - legal_name
      - start_date
      - dba_name
      - bank_account
      - batch_settings
      - address
      - directors
    properties:
      company_name:
        type: string
        maxLength: 64
      annual_sales:
        type: number
        format: float32
        description: 'This is the annual sales volume in EUR.'
      entity_type:
        type: string
        description: 'This is the business entity type'
        enum: ["public_limited","private_limited","limited_liability_partnership","combination_partnership","partnership","sole_trader","community_interest","charitable_incorporated","other"]
      website_url:
        type: string
        maxLength: 128
        format: uri
      legal_name:
        type: string
        maxLength: 64
      start_date:
        type: string
        format: date-time
        description: 'This is the business start date in ISO 8601 format with a timezone'
      registration_number:
        type: string
        maxLength: 32
      dba_name:
        type: string
        description: 'This is the "doing business as" name'
        maxLength: 32
      batch_settings:
        $ref: '#/definitions/BatchSettings'
      address:
        $ref: '#/definitions/Address'
      directors:
        type: array
        maxItems: 5
        minItems: 1
        items:
          $ref: '#/definitions/SepaEurDirector'
      bank_account:
          $ref: '#/definitions/EuropeanBankAccount'
      documents:
        type: array
        description: 'A maximum of six documents is allowed'
        minItems: 0
        maxItems: 6
        items:
          $ref: '#/definitions/SepaEurFile'

  BacsGbpBusiness:
    description: 'The details of a BACS United Kingdom business'
    additionalProperties: false
    type: object
    required:
      - company_name
      - annual_sales
      - entity_type
      - legal_name
      - start_date
      - dba_name
      - bank_account
      - batch_settings
      - address
      - directors
    properties:
      company_name:
        type: string
        maxLength: 64
      annual_sales:
        type: number
        format: float32
        description: 'This is the annual sales volume in GBP.'
      entity_type:
        type: string
        description: 'This is the business entity type'
        enum: ["public_limited","private_limited","limited_liability_partnership","combination_partnership","partnership","sole_trader","community_interest","charitable_incorporated","other"]
      website_url:
        type: string
        maxLength: 128
        format: uri
      legal_name:
        type: string
        maxLength: 64
      start_date:
        type: string
        format: date-time
        description: 'This is the business start date in ISO 8601 format with a timezone'
      registration_number:
        type: string
        maxLength: 32
      dba_name:
        type: string
        description: 'This is the "doing business as" name'
        maxLength: 32
      batch_settings:
        $ref: '#/definitions/BatchSettings'
      address:
        $ref: '#/definitions/Address'
      directors:
        type: array
        maxItems: 5
        minItems: 1
        items:
          $ref: '#/definitions/BacsGbpDirector'
      bank_account:
          $ref: '#/definitions/UnitedKingdomBankAccount'
      documents:
        type: array
        description: 'A maximum of six documents is allowed'
        minItems: 0
        maxItems: 6
        items:
          $ref: '#/definitions/BacsGbpFile'

  PspCadBusiness:
    description: 'The details of a Canadian business'
    additionalProperties: false
    type: object
    required:
      - company_name
      - annual_sales
      - merchant_category
      - start_date
      - entity_type
      - bank_account
      - address
    properties:
      company_name:
        type: string
        maxLength: 64
      annual_sales:
        type: number
        format: float32
        description: 'This is the annual online processing volume in CAD/USD.'
      merchant_category:
        type: string
        description: 'This is the merchant category code'
        enum: ["5813","5811","5812","8398","7997","8651","8661","8641","1711","1750","1731","1520","7623","1761","1740","7033","5462","5411","5499","5994","8021","8099","5963","5699","5971","5970","5992","5399","8931","7311","7542","7217","8351","7379","7372","7392","0780","8111","7349","7333","8999","6513","7251","0742","7230","7210","4121","4722","8299", "5814", "8699", "5815", "5816", "5817", "5821", "8041", "8042", "7211", "7216", "7221", "2741", "5697", "7399", "7032", "7523", "5045", "5065", "5072", "5074", "5111", "5137", "5139", "5192", "5193", "5200", "5211", "5231", "5251", "5261", "5331", "5422", "5451", "5533", "5611", "5621", "5631", "5641", "5651", "5655", "5661", "5691", "5732", "5733", "5734", "5941", "5942", "5943", "5945", "5947", "5949", "5977", "5995"]
      services_description:
        type: string
        maxLength: 500
        description: 'This is the description of the goods and/or services the merchant sells'
      entity_type:
        type: string
        description: 'This is the business entity type'
        enum: ["sole_proprietor","partnership","limited_partnership","joint_venture","corporation","non_profit"]
      website_url:
        type: string
        maxLength: 128
        format: uri
      start_date:
        type: string
        format: date-time
        description: 'This is the business start date in ISO 8601 format with a timezone'
      business_number:
        type: string
        maxLength: 32
      address:
        $ref: '#/definitions/Address'
      owners:
        type: array
        maxItems: 5
        minItems: 0
        description: 'Owners are required fields for Non-Profit entities'
        items:
          $ref: '#/definitions/PspCadOwner'
      bank_account:
          $ref: '#/definitions/CanadianBankAccount'

  PspUsdBusiness:
    description: 'The details of a US business'
    additionalProperties: false
    type: object
    required:
      - company_name
      - legal_name
      - annual_sales
      - merchant_category
      - start_date
      - entity_type
      - average_delivery
      - bank_account
      - address
      - federal_tax_id
      - tin_type
      - average_amount
      - services_description
    properties:
      company_name:
        type: string
        maxLength: 24
        description: 'This is the DBA (Doing Business As) name'
      legal_name:
        type: string
        maxLength: 40
        description: 'This is the business legal name'
      annual_sales:
        type: number
        format: float32
        description: 'This is the annual online processing volume in USD.'
      merchant_category:
        type: string
        description: 'This is the merchant category code'
        enum: ["7997","8699","8641","7941","7922","7994","5192","5499","7995","8099","5969","5968","5977","5732","5992","5999","7399","4816","7372","7392","8999","7299","4722","8299","4899","4814", "8398"]
      services_description:
        type: string
        maxLength: 100
        description: 'This is the description of the goods and/or services the merchant sells'
      federal_tax_id:
        type: string
        pattern: '^\d{9}$'
      tin_type:
        type: string
        description: 'This is the type of federal tax provided'
        enum: ["social_security","employment_id", "other"]
      entity_type:
        type: string
        description: 'This is the business entity type'
        enum: ["sole_proprietor","partnership","limited_liability_corp","privately_held_corp","publicly_traded_corp","international_organization","government","non_profit"]
      website_url:
        type: string
        maxLength: 70
        format: uri
      start_date:
        type: string
        format: date-time
        description: 'This is the business start date in ISO 8601 format with a timezone'
      average_amount:
        type: number
        format: float32
        description: 'This is the average transaction amount in USD.'
      average_delivery:
        type: string
        description: 'This is the average delivery time in days. 07: Days in Delivery 0 to 7,  14: Days in Delivery 8 to 14, 30: Days in Delivery 15 to 30, 31: Days in Delivery over 30'
        enum: ["07", "14", "30", "31"]
      seasonal_sales:
        type: string
        description: 'This determines if the sales are seasonal'
        enum: [ "1", "0"]
      address:
        $ref: '#/definitions/PspUsdAddress'
      owners:
        type: array
        maxItems: 5
        minItems: 0
        items:
          $ref: '#/definitions/PspUsdOwner'
      bank_account:
          $ref: '#/definitions/AmericanBankAccount'
      documents:
        type: array
        description: 'A maximum of three documents is allowed'
        minItems: 0
        maxItems: 3
        items:
          $ref: '#/definitions/PspUsdFile'

  PspNzdBusiness:
    description: 'The details of a New Zealand business'
    additionalProperties: false
    type: object
    required:
      - company_name
      - company_description
      - legal_name
      - annual_sales
      - average_monthly_sale
      - gst_number
      - merchant_category
      - business_industry
      - start_date
      - phone_number
      - entity_type
      - bank_account
      - address
    properties:
      company_name:
        type: string
        maxLength: 64
        description: 'Business Trading Name'
      company_description:
        type: string
        maxLength: 128
        description: 'Business purpose and description'
      legal_name:
        type: string
        maxLength: 128
        description: 'Source data from ASIC/business check'
      average_monthly_sale:
        type: number
        format: integer
      annual_sales:
        type: number
        format: integer
        description: 'This is the annual sales volume in NZD.'
      gst_number:
        type: string
        maxLength: 64
        description: 'gst number if yearly revenue is more than 60k'
      merchant_category:
        type: number
        format: integer
        description: 'This is the merchant category code'
      services_description:
        type: string
        maxLength: 512
        description: 'This is the description of the goods and/or services the merchant sells'
      business_industry:
        type: string
        maxLength: 64
      entity_type:
        type: string
        description: 'This is the business entity type that maps to Legal Business Type'
        enum: ["sole_trader","company"]
      website_url:
        type: string
        maxLength: 128
        format: uri
      start_date:
        type: string
        format: date-time
        description: 'This is the business start date in ISO 8601 format with a timezone'
      business_number:
        type: string
        maxLength: 32
      phone_number:
        type: string
        maxLength: 15
      address:
        $ref: '#/definitions/Address'
      documents:
        type: array
        description: 'A maximum of three documents is allowed'
        minItems: 0
        maxItems: 3
        items:
          $ref: '#/definitions/PspNzdFile'
      owners:
        type: array
        maxItems: 5
        minItems: 0
        description: 'Owners are required fields for Non-Profit entities'
        items:
          $ref: '#/definitions/PspNzdOwner'
      bank_account:
          $ref: '#/definitions/NewZealandBankAccount'

  BatchSettings:
    description: 'The details of a batch requirements'
    additionalProperties: false
    type: object
    required:
      - frequency
      - average_amount
      - maximum_amount
    properties:
      frequency:
        type: string
        enum: [ "daily", "weekly", "bi_weekly", "monthly", "bi_monthly", "semi_annually", "annually" ]
      average_amount:
        type: number
        format: float32
      maximum_amount:
        type: number
        format: float32

  PspUsdAddress:
    description: 'Defines a PSP USD address'
    additionalProperties: false
    type: object
    required:
      - address_line1
      - city
      - country
    properties:
      address_line1:
        type: string
        maxLength: 24
      address_line2:
        type: string
        maxLength: 24
      city:
        type: string
        maxLength: 21
      region:
        type: string
        description: "State/Province/Municipality/Region"
        maxLength: 2
      country:
        type: string
        description: "Valid ISO 3166-1 country code"
        enum: ["AD", "AE", "AF", "AG", "AI", "AL", "AM", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW"]
      postal_code:
        type: string
        description: 'Postal/Zip code'
        maxLength: 12

  Address:
    description: 'Defines a generic address'
    additionalProperties: false
    type: object
    required:
      - address_line1
      - city
      - country
    properties:
      address_line1:
        type: string
        maxLength: 64
      address_line2:
        type: string
        maxLength: 64
      city:
        type: string
        maxLength: 64
      region:
        type: string
        description: "State/Province/Municipality/Region"
        maxLength: 64
      country:
        type: string
        description: "Valid ISO 3166-1 country code"
        enum: ["AD", "AE", "AF", "AG", "AI", "AL", "AM", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW"]
      postal_code:
        type: string
        description: 'Postal/Zip code'
        maxLength: 7

  PspNzIdentity:
    description: 'Defines the identity for the owner'
    additionalProperties: false
    type: object
    properties:
      passport_number:
        type: string
        maxLength: 64
      passport_expiry:
        type: string
        format: date-time
      drivers_license_number:
        type: string
        maxLength: 64
      drivers_license_version:
        type: string
        maxLength: 64
      ev-token:
        type: string
        maxLength: 64
        description: 'Green verification ID'

  EftCadDirector:
    description: 'Defines an EFT Canadian business owner or director'
    additionalProperties: false
    type: object
    required:
      - first_name
      - last_name
      - date_of_birth
      - address
    properties:
      first_name:
        type: string
        maxLength: 64
      last_name:
        type: string
        maxLength: 64
      date_of_birth:
        type: string
        format: date-time
        description: 'Defines the birthday in ISO 8601 format with a timezone'
      address:
        $ref: '#/definitions/Address'

  AchUsdDirector:
    description: 'Defines an ACH American business owner or director'
    additionalProperties: false
    type: object
    required:
      - first_name
      - last_name
      - date_of_birth
      - start_date
      - address
    properties:
      first_name:
        type: string
        maxLength: 64
      last_name:
        type: string
        maxLength: 64
      date_of_birth:
        type: string
        format: date-time
        description: 'Defines the birthday in ISO 8601 format with a timezone'
      start_date:
        type: string
        format: date-time
        description: 'Defines the ownership start date in ISO 8601 format with a timezone'
      percentage:
        description: 'Defines the percentage, from 0.00 to 100.00, of the company ownership.'
        type: number
        format: float32
        minimum: 0
        maximum: 100
      address:
        $ref: '#/definitions/Address'

  SepaEurDirector:
    description: 'Defines a SEPA European business owner  or director'
    additionalProperties: false
    type: object
    required:
      - first_name
      - last_name
      - date_of_birth
      - start_date
      - address
    properties:
      first_name:
        type: string
        maxLength: 64
      last_name:
        type: string
        maxLength: 64
      date_of_birth:
        type: string
        format: date-time
        description: 'Defines the birthday in ISO 8601 format with a timezone'
      start_date:
        type: string
        format: date-time
        description: 'Defines the ownership start date in ISO 8601 format with a timezone'
      percentage:
        description: 'Defines the percentage, from 0.00 to 100.00, of the company ownership.'
        type: number
        format: float32
        minimum: 0
        maximum: 100
      address:
        $ref: '#/definitions/Address'

  BacsGbpDirector:
    description: 'Defines a BACS United Kingdom business owner  or director'
    additionalProperties: false
    type: object
    required:
      - first_name
      - last_name
      - date_of_birth
      - start_date
      - address
    properties:
      first_name:
        type: string
        maxLength: 64
      last_name:
        type: string
        maxLength: 64
      date_of_birth:
        type: string
        format: date-time
        description: 'Defines the birthday in ISO 8601 format with a timezone'
      start_date:
        type: string
        format: date-time
        description: 'Defines the the ownership start date in ISO 8601 format with a timezone'
      percentage:
        description: 'Defines the percentage, from 0.00 to 100.00, of the company ownership.'
        type: number
        format: float32
        minimum: 0
        maximum: 100
      address:
        $ref: '#/definitions/Address'

  PspCadOwner:
    description: 'Defines a Canadian business owner'
    additionalProperties: false
    type: object
    required:
      - first_name
      - last_name
      - date_of_birth
      - address
    properties:
      first_name:
        type: string
        maxLength: 64
      last_name:
        type: string
        maxLength: 64
      date_of_birth:
        type: string
        format: date-time
        description: 'Defines the birthday in ISO 8601 format with a timezone'
      address:
        $ref: '#/definitions/Address'

  PspUsdOwner:
    description: 'Defines a US business owner'
    additionalProperties: false
    type: object
    required:
      - first_name
      - last_name
      - date_of_birth
      - social_security_number
      - citizenship
      - address
    properties:
      first_name:
        type: string
        maxLength: 20
      last_name:
        type: string
        maxLength: 20
      date_of_birth:
        type: string
        format: date-time
        description: 'Defines the birthday in ISO 8601 format with a timezone'
      social_security_number:
        type: string
        maxLength: 9
      phone_number:
        type: string
        pattern: '^\d{1,20}$'
      email:
        type: string
        maxLength: 70
      citizenship:
        type: string
        description: "Valid ISO 3166-1 country code"
        enum: ["AD", "AE", "AF", "AG", "AI", "AL", "AM", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW"]
      percentage:
        description: 'Defines the percentage, from 0.00 to 100.00, of the company ownership.'
        type: number
        format: float32
        minimum: 0
        maximum: 100
      address:
        $ref: '#/definitions/PspUsdAddress'

  PspNzdOwner:
    description: 'Defines a New Zealander business owner'
    additionalProperties: false
    type: object
    required:
      - first_name
      - last_name
      - date_of_birth
      - phone_number
      - business_role
      - address
    properties:
      first_name:
        type: string
        maxLength: 64
      last_name:
        type: string
        maxLength: 64
      business_role:
        type: string
        maxLength: 64
      date_of_birth:
        type: string
        format: date-time
        description: 'Defines the birthday in ISO 8601 format with a timezone'
      phone_number:
        type: string
        maxLength: 15
      address:
        $ref: '#/definitions/Address'
      identity:
            $ref: '#/definitions/PspNzIdentity'

  CanadianBankAccount:
    description: 'Defines a Canadian bank account'
    additionalProperties: false
    type: object
    required:
      - owner_name
      - transit_number
      - institution_number
      - account_number
    properties:
      currency:
        type: string
        enum: ["CAD", "USD"]
        default: "CAD"
        description: 'This is the currency of the bank account'
      owner_name:
        type: string
        maxLength: 64
      transit_number:
        type: string
        pattern: '^\d{5}$'
      institution_number:
        type: string
        pattern: '^\d{3}$'
      account_number:
        type: string
        pattern: '^\d{4,12}$'
  AmericanBankAccount:
    description: 'Defines an American bank account'
    additionalProperties: false
    type: object
    required:
      - owner_name
      - routing_number
      - account_number
    properties:
      owner_name:
        type: string
        maxLength: 64
      routing_number:
        type: string
        pattern: '^\d{9}$'
      account_number:
        type: string
        pattern: '^\d{1,17}$'

  EuropeanBankAccount:
    description: 'Defines a European bank account'
    additionalProperties: false
    type: object
    required:
      - owner_name
      - bank_name
      - swift_code
      - iban
    properties:
      owner_name:
        type: string
        maxLength: 64
      bank_name:
        type: string
        maxLength: 32
      swift_code:
        type: string
        maxLength: 11
        description: 'Must be either 8 or 11 characters in length. Characters 1-4 are letters (A-Z). Characters 5-6 are a valid ISO 3166-1 Alpha-2 country code (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). To verify a SWIFT/BIC code and for example SWIFT/BIC codes, see http://formvalidation.io/validators/bic/.'
      iban:
        type: string
        maxLength: 34
        description: 'Must be valid IBAN. To verify an IBAN and get example IBANS, see http://formvalidation.io/validators/iban/.'

  UnitedKingdomBankAccount:
    description: 'Defines a United Kingdom bank account'
    additionalProperties: false
    type: object
    required:
      - owner_name
      - bank_name
      - sort_code
      - account_number
    properties:
      owner_name:
        type: string
        maxLength: 64
      bank_name:
        type: string
        maxLength: 32
      sort_code:
        type: string
        pattern: '^\d{2}-?\d{2}-?\d{2}$'
      account_number:
        type: string
        pattern: '^\d{8}$'

  NewZealandBankAccount:
    description: 'Defines a New Zealand bank account'
    additionalProperties: false
    type: object
    required:
      - owner_name
      - bsb
      - account_number
    properties:
      currency:
        type: string
        default: "NZD"
        description: 'This is the currency of the bank account'
      owner_name:
        type: string
        maxLength: 64
      bsb:
        type: string
        pattern: '^\d{6}$'
      account_number:
        type: string
        pattern: '^\d{9,10}$'

  EftCadFile:
    description: 'Defines a document that is required for application approval.'
    additionalProperties: false
    type: object
    required:
      - name
      - type
      - base64
    properties:
      name:
        type: string
        description: 'Name of the document. This will match to one of the list of possible files. This is a read-only attribute. The options are "Copy id (Owner and/or Principal) - govt issued photo id", "Void Check or Bank Statement", "Certificate of Incorporation (if applicable)", "Non-Profit Registration Documents (if applicable)" and "List of Board Members (public and NFP companies)"'
        enum: ["copy_id", "void_cheque", "bank_statement", "certificate", "registration", "board_members"]
      type:
        type: string
        description: 'File type of the document; accepted file formats.'
        enum: ["jpg", "jpeg", "doc", "docx", "pdf", "png"]
      notes:
        type: string
        description: 'Description of the document and the contents that it must contain.'
      base64:
        type: string
        description: 'The document data, submitted as a base64 encoded string..'
      uri:
        type: string
        description: 'The URI that allows retrieval of the documents using the GET /applications/{id}/documents/{name}. [ReadOnly]'

  AchUsdFile:
    description: 'Defines a document that is required for application approval.'
    additionalProperties: false
    type: object
    required:
      - name
      - type
      - base64
    properties:
      name:
        type: string
        description: 'Name of the document. This will match to one of the list of possible files. This is a read-only attribute. The options are "Copy id (Owner and/or Principal) - govt issued photo id", "Void Check or Bank Statement", "Certificate of Incorporation (if applicable)", "Non-Profit Registration Documents (if applicable)" and "List of Board Members (public and NFP companies)"'
        enum: ["copy_id", "void_cheque", "bank_statement", "certificate", "registration", "board_members"]
      type:
        type: string
        description: 'File type of the document; accepted file formats.'
        enum: ["jpg", "jpeg", "doc", "docx", "pdf", "png"]
      notes:
        type: string
        description: 'Description of the document and the contents that it must contain.'
      base64:
        type: string
        description: 'The document data, submitted as a base64 encoded string..'
      uri:
        type: string
        description: 'The URI that allows retrieval of the documents using the GET /applications/{id}/documents/{name}. [ReadOnly]'

  SepaEurFile:
    description: 'Defines a document that is required for application approval.'
    additionalProperties: false
    type: object
    required:
      - name
      - type
      - base64
    properties:
      name:
        type: string
        description: 'Name of the document. This will match to one of the list of possible files. This is a read-only attribute. The options are "Copy id (Owner and/or Principal) - govt issued photo id", "Void Check or Bank Statement", "Certificate of Incorporation (if applicable)", "Non-Profit Registration Documents (if applicable)", "List of Board Members (public and NFP companies)" and "Mandate"'
        enum: ["copy_id", "void_cheque", "bank_statement", "certificate", "registration", "board_members", "mandate"]
      type:
        type: string
        description: 'File type of the document; accepted file formats.'
        enum: ["jpg", "jpeg", "doc", "docx", "pdf", "png"]
      notes:
        type: string
        description: 'Description of the document and the contents that it must contain.'
      base64:
        type: string
        description: 'The document data, submitted as a base64 encoded string..'
      uri:
        type: string
        description: 'The URI that allows retrieval of the documents using the GET /applications/{id}/documents/{name}. [ReadOnly]'

  BacsGbpFile:
    description: 'Defines a document that is required for application approval.'
    additionalProperties: false
    type: object
    required:
      - name
      - type
      - base64
    properties:
      name:
        type: string
        description: 'Name of the document. This will match to one of the list of possible files. This is a read-only attribute. The options are "Copy id (Owner and/or Principal) - govt issued photo id", "Void Check or Bank Statement", "Certificate of Incorporation (if applicable)", "Non-Profit Registration Documents (if applicable)", "List of Board Members (public and NFP companies)" and "Direct Debit Instructions"'
        enum: ["copy_id", "void_cheque", "bank_statement", "certificate", "registration", "board_members", "direct_debit"]
      type:
        type: string
        description: 'File type of the document; accepted file formats.'
        enum: ["jpg", "jpeg", "doc", "docx", "pdf", "png"]
      notes:
        type: string
        description: 'Description of the document and the contents that it must contain.'
      base64:
        type: string
        description: 'The document data, submitted as a base64 encoded string..'
      uri:
        type: string
        description: 'The URI that allows retrieval of the documents using the GET /applications/{id}/documents/{name}. [ReadOnly]'

  PspUsdFile:
    description: 'Defines a document that is required for application approval.'
    additionalProperties: false
    type: object
    required:
      - name
      - type
      - base64
    properties:
      name:
        type: string
        description: 'Name of the document.'
        enum: ["id_applicant", "bank_statement", "pci_saq_document"]
      type:
        type: string
        description: 'File type of the document; accepted file formats.'
        enum: ["jpg", "jpeg", "doc", "docx", "pdf", "png"]
      notes:
        type: string
        description: 'Description of the document and the contents that it must contain.'
      base64:
        type: string
        description: 'The document data, submitted as a base64 encoded string..'
      uri:
        type: string
        description: 'The URI that allows retrieval of the documents using the GET /applications/{id}/documents/{name}. [ReadOnly]'

  PspNzdFile:
    description: 'Defines a document that is required for application approval.'
    additionalProperties: false
    type: object
    required:
      - name
      - type
    properties:
      name:
        type: string
        description: 'Name of the document.'
        enum: ["id_applicant", "bank_statement", "pci_saq_document"]
      expiry_date:
        type: string
        format: date-time
        description: 'Defines the date when the document will be expired in ISO 8601 format with a timezone'
      reference_number:
        type: string
        maxLength: 16
        description: 'document reference number if any'
      type:
        type: string
        description: 'File type of the document; accepted file formats.'
        enum: ["jpg", "jpeg", "doc", "docx", "pdf", "png"]
      notes:
        type: string
        description: 'Description of the document and the contents that it must contain.'
      base64:
        type: string
        description: 'The document data, submitted as a base64 encoded string..'
      uri:
        type: string
        description: 'The URI that allows retrieval of the documents using the GET /applications/{id}/documents/{name}. [ReadOnly]'

  ApplicationResponse:
    description: 'Defines information about the application'
    additionalProperties: false
    type: object
    properties:
      id:
        type: integer
        description: 'The id of the application'
      api_version:
        type: string
        description: 'The API version that the application was created with'
      state:
        type: string
        description: 'The state of the application. Possible values are "in_progress", "in_review", "on_hold", "rejected", "approved"'
        enum: ["in_progress","in_review","on_hold","rejected","approved"]
      created_on:
        type: string
        format: date-time
        description: 'The date when the application was created in ISO 8601 format with a timezone'
      updated_on:
        type: string
        format: date-time
        description: 'The date when the application was modified in  ISO 8601 format with a timezone'
      pending_issues:
        type: array
        items:
          $ref: '#/definitions/Error'

  ApplicationStatus:
    description: 'Defines information about the application status.'
    type: object
    properties:
      state:
        type: string
        description: 'The state of the application. Possible values are "in_progress", "in_review", "on_hold", "rejected", "approved"'
        enum: ["in_progress","in_review","on_hold","rejected","approved"]
      created_on:
        type: string
        format: date-time
        description: 'Defines the date when the application was created in ISO 8601 format with a timezone [ReadOnly]'
      updated_on:
        type: string
        format: date-time
        description: 'Defines the date when the application was modified in  ISO 8601 format with a timezone [ReadOnly]'
      pending_issues:
        type: array
        items:
          $ref: '#/definitions/Error'

  Agreement:
    description: 'Defines an terms and conditions agreement between a merchant and Bambora'
    additionalProperties: false
    type: object
    required:
      - name
      - version
      - timestamp
    properties:
      name:
        type: string
        description: 'Defines the name of the agreement'
      version:
        type: string
        description: 'Defines the version of the agreement'
      personal_guarantee_accepted:
        type: boolean
        description: "The applicant has read and accepted the terms of a personal guarantee."
      timestamp:
        type: string
        format: date-time
        description: 'Defines the date of the application terms and conditions agreeent in ISO 8601 format with a timezone [ReadOnly]'

  CombinedErrorResponse:
    description: 'Defines an document endpoint error'
    additionalProperties: false
    type: object
    properties:
      status:
        type: boolean
        description: 'Whether or not the request succeeded.  If this is returned, response_status and errors will not be'
      message:
        type: string
        description: 'A human readable message about the error.  If this is returned, response_status and errors will not be'
      response_status:
        type: integer
        description: 'The http response code returned. If this is returned, status and message will not be'
      errors:
        type: array
        description: 'The list of errors.  If this is returned, status and message will not be'
        items:
          $ref: '#/definitions/Error'

  ErrorResponse:
    description: 'Defines an error'
    additionalProperties: false
    type: object
    properties:
      response_status:
        type: integer
        description: 'The http response code returned'
      errors:
        type: array
        items:
          $ref: '#/definitions/Error'

  Error:
    description: 'Defines an error'
    additionalProperties: false
    type: object
    properties:
      name:
        type: string
        description: 'A field associated with the error'
      reason:
        type: string
        description: 'A human readable reason for the error'
      message:
        type: string
        description: 'A message code for the error'

  PricingPackage:
    description: 'The full pricing package associated with an application'
    type: object
    properties:
      id:
        type: integer
        description: 'The id of the pricing package'
      sales_person_name:
        type: string
        description: 'The sales person associated with the pricing package'
      description:
        type: string
        description: 'The description of the pricing package'
      billing_items:
        type: array
        description: 'The billing fees that will be associated with the application once approved'
        items:
          $ref: '#/definitions/BillingItem'
      channel_partner_id:
        type: integer
        description: 'The BIC channel partner id associated with the pricing packge'
      enabled:
        type: boolean
        description: 'Whether the pricing package is enabled or disabled'
      name:
        type: string
        description: 'The name of the pricing package'
      channel_partner_name:
        type: string
        description: 'The name of the channel partner associated with the pricing package'
      onboarding_link:
        type: string
        description: 'The URL of the onboarding screens for the pricing package'
      pricing_id:
        type: string
        description: 'The identifier for the pricing package associated with an application'
      application_type:
        type: string
        description: 'The workflow that the pricing package is associated with'
      created_on:
        type: string
        format: date-time
        description: 'The date the pricing package was created'
      updated_on:
        type: string
        format: date-time
        description: 'The date the pricing package was last updated'
      message:
        type: string
        description: 'An explanation of why the pricing package was not included (will only be available if pricing package retrieval is unsuccessful)'
      status_code:
        type: integer
        description: 'http code for the pricing package (will only be available if pricing package retrieval is unsuccessful)'

  BillingItem:
    type: object
    properties:
      id:
        type: integer
        description: 'The id of the billing item'
      amount:
        type: string
        description: 'The amount that the billing item will be billed at'
      prefix:
        type: string
        description: 'The symbol for the unit (%, $ or other currency symbol)'
      service:
        type: string
        description: 'Human readable description of the billing item'
